[{"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\index.js":"1","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\App.js":"2","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\store.js":"3","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\product\\ProductDetails.js":"4","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\Home.js":"5","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\layout\\Header.js":"6","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\ConfirmOrder.js":"7","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\PaymentGateway.js":"8","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\Cart.js":"9","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\Shipping.js":"10","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\Cod.js":"11","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\Payment.js":"12","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\order\\ListOrders.js":"13","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\user\\UpdateProfile.js":"14","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\order\\OrderDetails.js":"15","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\OrderSuccess.js":"16","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\user\\Register.js":"17","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\user\\UpdatePassword.js":"18","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\user\\Profile.js":"19","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\user\\Login.js":"20","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\user\\ForgotPassword.js":"21","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\Dashboard.js":"22","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\user\\NewPassword.js":"23","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\OrdersList.js":"24","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\UpdateProduct.js":"25","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\layout\\Footer.js":"26","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\UpdateUser.js":"27","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\ProcessOrder.js":"28","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\ProductReviews.js":"29","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\route\\ProtectedRoute.js":"30","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\UsersList.js":"31","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\ProductsList.js":"32","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\actions\\userActions.js":"33","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\reducers\\userReducers.js":"34","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\reducers\\productReducers.js":"35","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\reducers\\orderReducers.js":"36","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\NewProduct.js":"37","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\reducers\\cartReducers.js":"38","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\layout\\Loader.js":"39","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\layout\\MetaData.js":"40","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\LensPrescription.js":"41","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\actions\\productActions.js":"42","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\actions\\cartActions.js":"43","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\product\\Product.js":"44","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\layout\\Search.js":"45","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\CheckoutSteps.js":"46","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\Sidebar.js":"47","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\actions\\orderActions.js":"48","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\constants\\cartConstants.js":"49","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\review\\ListReviews.js":"50","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\constants\\productConstants.js":"51","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\constants\\orderConstants.js":"52","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\constants\\userConstants.js":"53"},{"size":589,"mtime":1626064716687,"results":"54","hashOfConfig":"55"},{"size":5108,"mtime":1627818118643,"results":"56","hashOfConfig":"55"},{"size":1942,"mtime":1627815573411,"results":"57","hashOfConfig":"55"},{"size":26484,"mtime":1628350107618,"results":"58","hashOfConfig":"55"},{"size":9424,"mtime":1627990628596,"results":"59","hashOfConfig":"55"},{"size":3526,"mtime":1627725273098,"results":"60","hashOfConfig":"55"},{"size":4289,"mtime":1627824335203,"results":"61","hashOfConfig":"55"},{"size":1154,"mtime":1627824358295,"results":"62","hashOfConfig":"55"},{"size":4649,"mtime":1627986222240,"results":"63","hashOfConfig":"55"},{"size":7804,"mtime":1627824299793,"results":"64","hashOfConfig":"55"},{"size":4030,"mtime":1628262482325,"results":"65","hashOfConfig":"55"},{"size":5550,"mtime":1627823276245,"results":"66","hashOfConfig":"55"},{"size":2710,"mtime":1626064716668,"results":"67","hashOfConfig":"55"},{"size":5120,"mtime":1627992804139,"results":"68","hashOfConfig":"55"},{"size":3774,"mtime":1626069907036,"results":"69","hashOfConfig":"55"},{"size":732,"mtime":1626064716657,"results":"70","hashOfConfig":"55"},{"size":6157,"mtime":1627992391820,"results":"71","hashOfConfig":"55"},{"size":2922,"mtime":1626064716681,"results":"72","hashOfConfig":"55"},{"size":2078,"mtime":1627992731859,"results":"73","hashOfConfig":"55"},{"size":3377,"mtime":1626064716678,"results":"74","hashOfConfig":"55"},{"size":2198,"mtime":1626064716677,"results":"75","hashOfConfig":"55"},{"size":5830,"mtime":1628000506920,"results":"76","hashOfConfig":"55"},{"size":2924,"mtime":1626064716679,"results":"77","hashOfConfig":"55"},{"size":3829,"mtime":1626069472935,"results":"78","hashOfConfig":"55"},{"size":9283,"mtime":1626069381311,"results":"79","hashOfConfig":"55"},{"size":462,"mtime":1627650651423,"results":"80","hashOfConfig":"55"},{"size":4587,"mtime":1626064716651,"results":"81","hashOfConfig":"55"},{"size":6282,"mtime":1626069621952,"results":"82","hashOfConfig":"55"},{"size":5078,"mtime":1626069337413,"results":"83","hashOfConfig":"55"},{"size":920,"mtime":1626064716676,"results":"84","hashOfConfig":"55"},{"size":3543,"mtime":1626064716652,"results":"85","hashOfConfig":"55"},{"size":3787,"mtime":1626070051892,"results":"86","hashOfConfig":"55"},{"size":7431,"mtime":1626594421983,"results":"87","hashOfConfig":"55"},{"size":6383,"mtime":1627992677799,"results":"88","hashOfConfig":"55"},{"size":6970,"mtime":1626605770923,"results":"89","hashOfConfig":"55"},{"size":5164,"mtime":1627815370015,"results":"90","hashOfConfig":"55"},{"size":8288,"mtime":1626069967696,"results":"91","hashOfConfig":"55"},{"size":1311,"mtime":1627649482640,"results":"92","hashOfConfig":"55"},{"size":134,"mtime":1626064716664,"results":"93","hashOfConfig":"55"},{"size":232,"mtime":1626080878401,"results":"94","hashOfConfig":"55"},{"size":12687,"mtime":1627991221722,"results":"95","hashOfConfig":"55"},{"size":5945,"mtime":1626594342385,"results":"96","hashOfConfig":"55"},{"size":1385,"mtime":1628349527522,"results":"97","hashOfConfig":"55"},{"size":1291,"mtime":1627990396859,"results":"98","hashOfConfig":"55"},{"size":985,"mtime":1627724445418,"results":"99","hashOfConfig":"55"},{"size":2301,"mtime":1626155904533,"results":"100","hashOfConfig":"55"},{"size":1638,"mtime":1626064716649,"results":"101","hashOfConfig":"55"},{"size":4759,"mtime":1628348689849,"results":"102","hashOfConfig":"55"},{"size":219,"mtime":1627649323096,"results":"103","hashOfConfig":"55"},{"size":714,"mtime":1626064716674,"results":"104","hashOfConfig":"55"},{"size":1905,"mtime":1626064716686,"results":"105","hashOfConfig":"55"},{"size":1350,"mtime":1627814908297,"results":"106","hashOfConfig":"55"},{"size":2213,"mtime":1626064716687,"results":"107","hashOfConfig":"55"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"tbdo64",{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"110"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138","usedDeprecatedRules":"110"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"110"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"110"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"187","usedDeprecatedRules":"110"},{"filePath":"188","messages":"189","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"190","messages":"191","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"110"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"201","messages":"202","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"110"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"110"},"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\index.js",[],["222","223"],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\App.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\store.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\product\\ProductDetails.js",["224"],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\Home.js",["225","226"],"import React, { Fragment, useState, useEffect } from 'react'\nimport Pagination from 'react-js-pagination'\nimport Slider from 'rc-slider'\nimport 'rc-slider/assets/index.css';\n\nimport MetaData from './layout/MetaData'\nimport Product from './product/Product'\nimport Loader from './layout/Loader'\n\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useAlert } from 'react-alert';\nimport { getProducts } from '../actions/productActions'\n\nconst { createSliderWithTooltip } = Slider;\nconst Range = createSliderWithTooltip(Slider.Range)\n\nconst Home = ({ match }) => {\n\n    const [currentPage, setCurrentPage] = useState(1)\n    const [price, setPrice] = useState([1, 1000])\n    const [category, setCategory] = useState('')\n    const [rating, setRating] = useState(0)\n\n    const categories = [\n        'Mens',\n        'Womens',\n        'Kids',\n        'Others',\n        'Common Wear'\n\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, products, error, productsCount, resPerPage, filteredProductsCount } = useSelector(state => state.products)\n\n    const keyword = match.params.keyword\n\n    useEffect(() => {\n        if (error) {\n            return alert.error(error)\n        }\n\n        dispatch(getProducts(keyword, currentPage, price, category, rating));\n\n\n    }, [dispatch, alert, error, keyword, currentPage, price, category, rating])\n\n    function setCurrentPageNo(pageNumber) {\n        setCurrentPage(pageNumber)\n    }\n\n    let count = productsCount;\n    if (keyword) {\n        count = filteredProductsCount\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Buy Best lens Online'} />\n\n                    <h1 id=\"products_heading\" style={{ marginTop: '80px' }}>Latest Products</h1>\n\n                    {keyword ? '' : <div className=\"container\">\n                        <h4 className=\"mb-8\">\n                            Categories\n                        </h4>\n\n                        <ul className=\"row d-flex justify-content-center\">\n                            {categories.map(category => (\n                                <li\n                                    style={{\n                                        cursor: 'pointer',\n                                        listStyleType: 'none',\n                                        border: '1px solid black',\n                                        padding: '10px',\n                                        marginRight: '10px',\n\n\n                                    }}\n                                    key={category}\n                                    onClick={() => setCategory(category)}\n                                >\n                                    {category}\n\n                                </li>\n                            ))}\n                        </ul>\n                    </div>}\n\n                    <section id=\"products\" className=\"container mt-5\">\n                        <div className=\"row\">\n\n                            {keyword ? (\n                                <>\n                                    <div className=\"col-4 col-md-3 mt-1 mb-5 mr-5\">\n                                        <div className=\"px-5\">\n\n                                            <div className=\"mt-0\">\n                                                <h4 className=\"mb-3\">\n                                                    Categories\n                                                </h4>\n\n                                                <ul className=\"px-0\">\n                                                    {categories.map(category => (\n                                                        <li\n                                                            style={{\n                                                                cursor: 'pointer',\n                                                                listStyleType: 'none'\n                                                            }}\n                                                            key={category}\n                                                            onClick={() => setCategory(category)}\n                                                        >\n                                                            {category}\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </div>\n\n                                            <hr className=\"my-3\" />\n\n                                            <div className=\"mt-5\">\n                                                <h4 className=\"mb-3\">\n                                                    Ratings\n                                                </h4>\n\n                                                <ul className=\"pl-0\">\n                                                    {[5, 4, 3, 2, 1].map(star => (\n                                                        <li\n                                                            style={{\n                                                                cursor: 'pointer',\n                                                                listStyleType: 'none'\n                                                            }}\n                                                            key={star}\n                                                            onClick={() => setRating(star)}\n                                                        >\n                                                            <div className=\"rating-outer\">\n                                                                <div className=\"rating-inner\"\n                                                                    style={{\n                                                                        width: `${star * 20}%`\n                                                                    }}\n                                                                >\n                                                                </div>\n                                                            </div>\n                                                        </li>\n                                                    ))}\n                                                </ul>\n                                            </div>\n                                            {/* <hr className=\"my-5\" />\n                                            <Range\n                                                marks={{\n                                                    1: `1`,\n                                                    1000: `1000`\n                                                }}\n                                                min={1}\n                                                max={1000}\n                                                defaultValue={[1, 1000]}\n                                                tipFormatter={value => `${value}`}\n                                                tipProps={{\n                                                    placement: \"top\",\n                                                    visible: true\n                                                }}\n                                                value={price}\n                                                onChange={price => setPrice(price)}\n                                            /> */}\n\n                                        </div>\n                                    </div>\n\n                                    <div className=\"col-8 col-12\">\n                                        <div className=\"row\">\n                                            {products.map(product => (\n                                                <Product key={product._id} product={product} col={4} />\n                                            ))}\n                                        </div>\n                                    </div>\n                                </>\n                            ) :\n\n                                (\n                                    products.map(product => (\n                                        <Product key={product._id} product={product} col={3} />\n                                    ))\n\n                                )\n\n                            }\n\n                        </div>\n                    </section>\n\n                    {resPerPage <= count && (\n                        <div className=\"d-flex justify-content-center mt-5\">\n                            <Pagination\n                                activePage={currentPage}\n                                itemsCountPerPage={resPerPage}\n                                totalItemsCount={productsCount}\n                                onChange={setCurrentPageNo}\n                                // nextPageText={'Next'}\n                                // prevPageText={'Prev'}\n                                // firstPageText={'First'}\n                                // lastPageText={'Last'}\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                            />\n                        </div>\n                    )}\n\n                </Fragment>\n            )\n            }\n\n        </Fragment>\n    )\n}\n\nexport default Home\n","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\layout\\Header.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\ConfirmOrder.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\PaymentGateway.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\Cart.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\Shipping.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\Cod.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\Payment.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\order\\ListOrders.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\user\\UpdateProfile.js",["227"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { updateProfile, loadUser, clearErrors } from '../../actions/userActions'\nimport { UPDATE_PROFILE_RESET } from '../../constants/userConstants'\n\nconst UpdateProfile = ({ history }) => {\n\n    const [name, setName] = useState('')\n    const [email, setEmail] = useState('')\n    const [avatar, setAvatar] = useState('')\n    const [avatarPreview, setAvatarPreview] = useState('/images/default_avatar.jpg')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { user } = useSelector(state => state.auth);\n    const { error, isUpdated, loading } = useSelector(state => state.user)\n\n    useEffect(() => {\n\n        if (user) {\n            setName(user.name);\n            setEmail(user.email);\n            setAvatarPreview(user.avatar)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n        if (isUpdated) {\n            alert.success('User updated successfully')\n            dispatch(loadUser());\n\n            history.push('/me')\n\n            dispatch({\n                type: UPDATE_PROFILE_RESET\n            })\n        }\n\n    }, [dispatch, alert, error, history, isUpdated])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('email', email);\n        formData.set('avatar', avatar);\n\n        dispatch(updateProfile(formData))\n    }\n\n    const onChange = e => {\n        const reader = new FileReader();\n\n        reader.onload = () => {\n            if (reader.readyState === 2) {\n                setAvatarPreview(reader.result)\n                setAvatar(reader.result)\n            }\n        }\n\n        reader.readAsDataURL(e.target.files[0])\n\n    }\n    return (\n        <Fragment>\n            <MetaData title={'Update Profile'} />\n\n            <div className=\"row wrapper\">\n                <div className=\"col-10 col-lg-5\">\n                    <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                        <h1 className=\"mt-2 mb-5\">Update Profile</h1>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Name</label>\n                            <input\n                                type=\"name\"\n                                id=\"name_field\"\n                                className=\"form-control\"\n                                name='name'\n                                value={name}\n                                onChange={(e) => setName(e.target.value)}\n                            />\n                        </div>\n\n                        <div className=\"form-group\">\n                            <label htmlFor=\"email_field\">Email</label>\n                            <input\n                                type=\"email\"\n                                id=\"email_field\"\n                                className=\"form-control\"\n                                name='email'\n                                value={email}\n                                onChange={(e) => setEmail(e.target.value)}\n                            />\n                        </div>\n\n                        <div className='form-group'>\n                            <label htmlFor='avatar_upload'>Avatar</label>\n                            <div className='d-flex align-items-center'>\n                                <div>\n                                    <figure className='avatar mr-3 item-rtl'>\n                                        <img\n                                            src={avatarPreview}\n                                            className='rounded-circle'\n                                            alt='Avatar Preview'\n                                        />\n                                    </figure>\n                                </div>\n                                <div className='custom-file'>\n                                    <input\n                                        type='file'\n                                        name='avatar'\n                                        className='custom-file-input'\n                                        id='customFile'\n                                        accept='image/*'\n                                        onChange={onChange}\n                                    />\n                                    <label className='custom-file-label' htmlFor='customFile'>\n                                        Choose Avatar\n                                    </label>\n                                </div>\n                            </div>\n                        </div>\n\n                        <button type=\"submit\" className=\"btn update-btn btn-block mt-4 mb-3\" disabled={loading ? true : false} >Update</button>\n                    </form>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nexport default UpdateProfile\n","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\order\\OrderDetails.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\OrderSuccess.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\user\\Register.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\user\\UpdatePassword.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\user\\Profile.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\user\\Login.js",["228"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport Loader from '../layout/Loader'\nimport MetaData from '../layout/MetaData'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { login, clearErrors } from '../../actions/userActions'\n\nconst Login = ({ history, location }) => {\n\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { isAuthenticated, error, loading } = useSelector(state => state.auth);\n\n    const redirect = location.search ? location.search.split('=')[1] : '/'\n\n    useEffect(() => {\n\n        if (isAuthenticated) {\n            history.push(redirect)\n        }\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors());\n        }\n\n    }, [dispatch, alert, isAuthenticated, error, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(login(email, password))\n    }\n\n    return (\n        <Fragment>\n            {loading ? <Loader /> : (\n                <Fragment>\n                    <MetaData title={'Login'} />\n\n                    <div className=\"row wrapper\">\n                        <div className=\"col-10 col-lg-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler}>\n                                <h1 className=\"mb-3\">Login</h1>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"email_field\">Email</label>\n                                    <input\n                                        type=\"email\"\n                                        id=\"email_field\"\n                                        className=\"form-control\"\n                                        value={email}\n                                        onChange={(e) => setEmail(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"password_field\">Password</label>\n                                    <input\n                                        type=\"password\"\n                                        id=\"password_field\"\n                                        className=\"form-control\"\n                                        value={password}\n                                        onChange={(e) => setPassword(e.target.value)}\n                                    />\n                                </div>\n\n                                <Link to=\"/password/forgot\" className=\"float-right mb-4\">Forgot Password?</Link>\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                >\n                                    LOGIN\n                                </button>\n\n                                <Link to=\"/register\" className=\"float-right mt-3\">New User?</Link>\n                            </form>\n                        </div>\n                    </div>\n\n\n                </Fragment>\n            )}\n        </Fragment>\n    )\n}\n\nexport default Login\n","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\user\\ForgotPassword.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\Dashboard.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\user\\NewPassword.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\OrdersList.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\UpdateProduct.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\layout\\Footer.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\UpdateUser.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\ProcessOrder.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\ProductReviews.js",["229"],"import React, { Fragment, useState, useEffect } from 'react'\nimport { MDBDataTable } from 'mdbreact'\n\nimport MetaData from '../layout/MetaData'\nimport Loader from '../layout/Loader'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { getProductReviews, deleteReview, clearErrors } from '../../actions/productActions'\nimport { DELETE_REVIEW_RESET } from '../../constants/productConstants'\n\nconst ProductReviews = () => {\n\n    const [productId, setProductId] = useState('')\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { error, reviews } = useSelector(state => state.productReviews);\n    const { isDeleted, error: deleteError } = useSelector(state => state.review)\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (deleteError) {\n            alert.error(deleteError);\n            dispatch(clearErrors())\n        }\n\n        if (productId !== '') {\n            dispatch(getProductReviews(productId))\n        }\n\n        if (isDeleted) {\n            alert.success('Review deleted successfully');\n            dispatch({ type: DELETE_REVIEW_RESET })\n        }\n\n\n\n    }, [dispatch, alert, error, productId, isDeleted, deleteError])\n\n    const deleteReviewHandler = (id) => {\n        dispatch(deleteReview(id, productId))\n    }\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n        dispatch(getProductReviews(productId))\n    }\n\n    const setReviews = () => {\n        const data = {\n            columns: [\n                {\n                    label: 'Review ID',\n                    field: 'id',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Rating',\n                    field: 'rating',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Comment',\n                    field: 'comment',\n                    sort: 'asc'\n                },\n                {\n                    label: 'User',\n                    field: 'user',\n                    sort: 'asc'\n                },\n                {\n                    label: 'Actions',\n                    field: 'actions',\n                },\n            ],\n            rows: []\n        }\n\n        reviews.forEach(review => {\n            data.rows.push({\n                id: review._id,\n                rating: review.rating,\n                comment: review.comment,\n                user: review.name,\n\n                actions:\n                    <button className=\"btn btn-danger py-1 px-2 ml-2\" onClick={() => deleteReviewHandler(review._id)}>\n                        <i className=\"fa fa-trash\"></i>\n                    </button>\n            })\n        })\n\n        return data;\n    }\n\n    return (\n        <Fragment>\n            <MetaData title={'Product Reviews'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"row justify-content-center mt-5\">\n                            <div className=\"col-5\">\n                                <form onSubmit={submitHandler}>\n                                    <div className=\"form-group\">\n                                        <label htmlFor=\"productId_field\">Enter Product ID</label>\n                                        <input\n                                            type=\"text\"\n                                            id=\"productId_field\"\n                                            className=\"form-control\"\n                                            value={productId}\n                                            onChange={(e) => setProductId(e.target.value)}\n                                        />\n                                    </div>\n\n                                    <button\n                                        id=\"search_button\"\n                                        type=\"submit\"\n                                        className=\"btn btn-primary btn-block py-2\"\n                                    >\n                                        SEARCH\n                                    </button>\n                                </form>\n                            </div>\n\n                        </div>\n\n                        {reviews && reviews.length > 0 ? (\n                            <MDBDataTable\n                                data={setReviews()}\n                                className=\"px-3\"\n                                bordered\n                                striped\n                                hover\n                            />\n                        ) : (\n                            <p className=\"mt-5 text-center\">No Reviews.</p>\n                        )}\n\n\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default ProductReviews\n","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\route\\ProtectedRoute.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\UsersList.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\ProductsList.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\actions\\userActions.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\reducers\\userReducers.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\reducers\\productReducers.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\reducers\\orderReducers.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\NewProduct.js",["230"],"import React, { Fragment, useState, useEffect } from 'react'\n\nimport MetaData from '../layout/MetaData'\nimport Sidebar from './Sidebar'\n\nimport { useAlert } from 'react-alert'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { newProduct, clearErrors } from '../../actions/productActions'\nimport { NEW_PRODUCT_RESET } from '../../constants/productConstants'\n\nconst NewProduct = ({ history }) => {\n\n    const [name, setName] = useState('');\n    const [price, setPrice] = useState(0);\n    const [description, setDescription] = useState('');\n    const [category, setCategory] = useState('');\n    const [stock, setStock] = useState(0);\n    const [seller, setSeller] = useState('');\n    const [images, setImages] = useState([]);\n    const [imagesPreview, setImagesPreview] = useState([])\n\n    const categories = [\n        'Electronics',\n        'Cameras',\n        'Laptops',\n        'Accessories',\n        'Headphones',\n        'Food',\n        \"Books\",\n        'Clothes/Shoes',\n        'Beauty/Health',\n        'Sports',\n        'Outdoor',\n        'Home'\n    ]\n\n    const alert = useAlert();\n    const dispatch = useDispatch();\n\n    const { loading, error, success } = useSelector(state => state.newProduct);\n\n    useEffect(() => {\n\n        if (error) {\n            alert.error(error);\n            dispatch(clearErrors())\n        }\n\n        if (success) {\n            history.push('/admin/products');\n            alert.success('Product created successfully');\n            dispatch({ type: NEW_PRODUCT_RESET })\n        }\n\n    }, [dispatch, alert, error, success, history])\n\n    const submitHandler = (e) => {\n        e.preventDefault();\n\n        const formData = new FormData();\n        formData.set('name', name);\n        formData.set('price', price);\n        formData.set('description', description);\n        formData.set('category', category);\n        formData.set('stock', stock);\n        formData.set('seller', seller);\n\n        images.forEach(image => {\n            formData.append('images', image)\n        })\n\n        dispatch(newProduct(formData))\n    }\n\n    const onChange = e => {\n\n        const files = Array.from(e.target.files)\n\n        setImagesPreview([]);\n        setImages([])\n\n        files.forEach(file => {\n            const reader = new FileReader();\n\n            reader.onload = () => {\n                if (reader.readyState === 2) {\n                    setImagesPreview(oldArray => [...oldArray, reader.result])\n                    setImages(oldArray => [...oldArray, reader.result])\n                }\n            }\n\n            reader.readAsDataURL(file)\n        })\n    }\n\n\n    return (\n        <Fragment>\n            <MetaData title={'New Product'} />\n            <div className=\"row\">\n                <div className=\"col-12 col-md-2\">\n                    <Sidebar />\n                </div>\n\n                <div className=\"col-12 col-md-10\">\n                    <Fragment>\n                        <div className=\"wrapper my-5\">\n                            <form className=\"shadow-lg\" onSubmit={submitHandler} encType='multipart/form-data'>\n                                <h1 className=\"mb-4\">New Product</h1>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"name_field\">Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"name_field\"\n                                        className=\"form-control\"\n                                        value={name}\n                                        onChange={(e) => setName(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"price_field\">Price</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"price_field\"\n                                        className=\"form-control\"\n                                        value={price}\n                                        onChange={(e) => setPrice(e.target.value)}\n                                    />\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"description_field\">Description</label>\n                                    <textarea className=\"form-control\" id=\"description_field\" rows=\"8\"\n                                        value={description} onChange={(e) => setDescription(e.target.value)}></textarea>\n                                </div>\n\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"category_field\">Category</label>\n                                    <select className=\"form-control\" id=\"category_field\" value={category}\n                                        onChange={(e) => setCategory(e.target.value)}>\n                                        {categories.map(category => (\n                                            <option key={category} value={category} >{category}</option>\n                                        ))}\n\n                                    </select>\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"stock_field\">Stock</label>\n                                    <input\n                                        type=\"number\"\n                                        id=\"stock_field\"\n                                        className=\"form-control\"\n                                        value={stock}\n                                        onChange={(e) => setStock(e.target.value)}\n                                    />\n                                </div>\n\n                                {/* <div className=\"form-group\">\n                                    <label htmlFor=\"seller_field\">Seller Name</label>\n                                    <input\n                                        type=\"text\"\n                                        id=\"seller_field\"\n                                        className=\"form-control\"\n                                        value={seller}\n                                        onChange={(e) => setSeller(e.target.value)}\n                                    />\n                                </div> */}\n\n                                <div className='form-group'>\n                                    <label>Images</label>\n\n                                    <div className='custom-file'>\n                                        <input\n                                            type='file'\n                                            name='product_images'\n                                            className='custom-file-input'\n                                            id='customFile'\n                                            onChange={onChange}\n                                            multiple\n                                        />\n                                        <label className='custom-file-label' htmlFor='customFile'>\n                                            Choose Images\n                                        </label>\n                                    </div>\n\n                                    {imagesPreview.map(img => (\n                                        <img src={img} key={img} alt=\"Images Preview\" className=\"mt-3 mr-2\" width=\"55\" height=\"52\" />\n                                    ))}\n\n                                </div>\n\n\n                                <button\n                                    id=\"login_button\"\n                                    type=\"submit\"\n                                    className=\"btn btn-block py-3\"\n                                    disabled={loading ? true : false}\n                                >\n                                    CREATE\n                                </button>\n\n                            </form>\n                        </div>\n                    </Fragment>\n                </div>\n            </div>\n\n        </Fragment>\n    )\n}\n\nexport default NewProduct\n","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\reducers\\cartReducers.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\layout\\Loader.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\layout\\MetaData.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\LensPrescription.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\actions\\productActions.js",["231"],"import axios from 'axios';\n\nimport {\n    ALL_PRODUCTS_REQUEST,\n    ALL_PRODUCTS_SUCCESS,\n    ALL_PRODUCTS_FAIL,\n\n    ADMIN_PRODUCTS_REQUEST,\n    ADMIN_PRODUCTS_SUCCESS,\n    ADMIN_PRODUCTS_FAIL,\n\n    NEW_PRODUCT_REQUEST,\n    NEW_PRODUCT_SUCCESS,\n    NEW_PRODUCT_FAIL,\n\n    DELETE_PRODUCT_REQUEST,\n    DELETE_PRODUCT_SUCCESS,\n    DELETE_PRODUCT_FAIL,\n\n    UPDATE_PRODUCT_REQUEST,\n    UPDATE_PRODUCT_SUCCESS,\n    UPDATE_PRODUCT_FAIL,\n\n    PRODUCT_DETAILS_REQUEST,\n    PRODUCT_DETAILS_SUCCESS,\n    PRODUCT_DETAILS_FAIL,\n\n    NEW_REVIEW_REQUEST,\n    NEW_REVIEW_SUCCESS,\n    NEW_REVIEW_FAIL,\n\n    GET_REVIEWS_REQUEST,\n    GET_REVIEWS_SUCCESS,\n    GET_REVIEWS_FAIL,\n\n    DELETE_REVIEW_REQUEST,\n    DELETE_REVIEW_SUCCESS,\n    DELETE_REVIEW_RESET,\n\n    DELETE_REVIEW_FAIL,\n    CLEAR_ERRORS\n\n} from '../constants/productConstants'\n\nexport const getProducts = (keyword = '', currentPage = 1, price, category, rating = 0) => async (dispatch) => {\n    try {\n\n        dispatch({ type: ALL_PRODUCTS_REQUEST })\n\n        let link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&ratings[gte]=${rating}`\n\n        if (category) {\n            link = `/api/v1/products?keyword=${keyword}&page=${currentPage}&price[lte]=${price[1]}&price[gte]=${price[0]}&category=${category}&ratings[gte]=${rating}`\n        }\n\n        const { data } = await axios.get(link)\n\n        dispatch({\n            type: ALL_PRODUCTS_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: ALL_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newProduct = (productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post(`/api/v1/admin/product/new`, productData, config)\n\n        dispatch({\n            type: NEW_PRODUCT_SUCCESS,\n            payload: data\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product (Admin)\nexport const deleteProduct = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_PRODUCT_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/admin/product/${id}`)\n\n        dispatch({\n            type: DELETE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: DELETE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Update Product (ADMIN)\nexport const updateProduct = (id, productData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: UPDATE_PRODUCT_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/admin/product/${id}`, productData, config)\n\n        dispatch({\n            type: UPDATE_PRODUCT_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: UPDATE_PRODUCT_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const getProductDetails = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/product/${id}`)\n\n        dispatch({\n            type: PRODUCT_DETAILS_SUCCESS,\n            payload: data.product\n        })\n\n    } catch (error) {\n        dispatch({\n            type: PRODUCT_DETAILS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\nexport const newReview = (reviewData) => async (dispatch) => {\n    try {\n\n        dispatch({ type: NEW_REVIEW_REQUEST })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.put(`/api/v1/review`, reviewData, config)\n\n        dispatch({\n            type: NEW_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n        dispatch({\n            type: NEW_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n\nexport const getAdminProducts = () => async (dispatch) => {\n    try {\n\n        dispatch({ type: ADMIN_PRODUCTS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/admin/products`)\n\n        dispatch({\n            type: ADMIN_PRODUCTS_SUCCESS,\n            payload: data.products\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: ADMIN_PRODUCTS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Get product reviews\nexport const getProductReviews = (id) => async (dispatch) => {\n    try {\n\n        dispatch({ type: GET_REVIEWS_REQUEST })\n\n        const { data } = await axios.get(`/api/v1/reviews?id=${id}`)\n\n        dispatch({\n            type: GET_REVIEWS_SUCCESS,\n            payload: data.reviews\n        })\n\n    } catch (error) {\n\n        dispatch({\n            type: GET_REVIEWS_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Delete product review\nexport const deleteReview = (id, productId) => async (dispatch) => {\n    try {\n\n        dispatch({ type: DELETE_REVIEW_REQUEST })\n\n        const { data } = await axios.delete(`/api/v1/reviews?id=${id}&productId=${productId}`)\n\n        dispatch({\n            type: DELETE_REVIEW_SUCCESS,\n            payload: data.success\n        })\n\n    } catch (error) {\n\n        console.log(error.response);\n\n        dispatch({\n            type: DELETE_REVIEW_FAIL,\n            payload: error.response.data.message\n        })\n    }\n}\n\n// Clear Errors\nexport const clearErrors = () => async (dispatch) => {\n    dispatch({\n        type: CLEAR_ERRORS\n    })\n}","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\actions\\cartActions.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\product\\Product.js",["232"],"import React from 'react';\nimport './Product.css';\nimport { Link } from 'react-router-dom'\n\nconst Product = ({ product, col }) => {\n    return (\n        <div className={`col-sm-12 col-md-6 col-lg-${col} my-3`}>\n            <div className=\"card p-3 rounded\">\n                <img\n                    className=\"card-img-top mx-auto\"\n                    src={product.images[0].url}\n                />\n                <div className=\"card-body d-flex flex-column\">\n                    <h5 className=\"card-title\">\n                        <Link to={`/product/${product._id}`}>{product.name}</Link>\n                    </h5>\n                    <div className=\"ratings mt-auto\">\n                        <div className=\"rating-outer\">\n                            <div className=\"rating-inner\" style={{ width: `${(product.ratings / 5) * 100}%` }}></div>\n                        </div>\n                        <span id=\"no_of_reviews\">({product.numOfReviews} Reviews)</span>\n                    </div>\n                    <p className=\"card-text\">Rs.{product.price}</p>\n                    <Link to={`/product/${product._id}`} id=\"view_btn\"\n                        className=\"btn btn-block\">View Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Product\n","C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\layout\\Search.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\cart\\CheckoutSteps.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\admin\\Sidebar.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\actions\\orderActions.js",["233"],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\constants\\cartConstants.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\components\\review\\ListReviews.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\constants\\productConstants.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\constants\\orderConstants.js",[],"C:\\Users\\Sawan\\Desktop\\All Files\\Dummy\\Sanjay\\sawan\\frontEnd\\src\\constants\\userConstants.js",[],{"ruleId":"234","replacedBy":"235"},{"ruleId":"236","replacedBy":"237"},{"ruleId":"238","severity":1,"message":"239","line":42,"column":20,"nodeType":"240","messageId":"241","endLine":42,"endColumn":29},{"ruleId":"238","severity":1,"message":"242","line":15,"column":7,"nodeType":"240","messageId":"241","endLine":15,"endColumn":12},{"ruleId":"238","severity":1,"message":"243","line":20,"column":19,"nodeType":"240","messageId":"241","endLine":20,"endColumn":27},{"ruleId":"244","severity":1,"message":"245","line":47,"column":8,"nodeType":"246","endLine":47,"endColumn":52,"suggestions":"247"},{"ruleId":"244","severity":1,"message":"248","line":34,"column":8,"nodeType":"246","endLine":34,"endColumn":58,"suggestions":"249"},{"ruleId":"238","severity":1,"message":"250","line":5,"column":8,"nodeType":"240","messageId":"241","endLine":5,"endColumn":14},{"ruleId":"238","severity":1,"message":"251","line":18,"column":20,"nodeType":"240","messageId":"241","endLine":18,"endColumn":29},{"ruleId":"238","severity":1,"message":"252","line":38,"column":5,"nodeType":"240","messageId":"241","endLine":38,"endColumn":24},{"ruleId":"253","severity":1,"message":"254","line":9,"column":17,"nodeType":"255","endLine":12,"endColumn":19},{"ruleId":"238","severity":1,"message":"256","line":35,"column":5,"nodeType":"240","messageId":"241","endLine":35,"endColumn":13},"no-native-reassign",["257"],"no-negated-in-lhs",["258"],"no-unused-vars","'setAvatar' is assigned a value but never used.","Identifier","unusedVar","'Range' is assigned a value but never used.","'setPrice' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'user'. Either include it or remove the dependency array.","ArrayExpression",["259"],"React Hook useEffect has a missing dependency: 'redirect'. Either include it or remove the dependency array.",["260"],"'Loader' is defined but never used.","'setSeller' is assigned a value but never used.","'DELETE_REVIEW_RESET' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'FormData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"261","fix":"262"},{"desc":"263","fix":"264"},"Update the dependencies array to be: [dispatch, alert, error, history, isUpdated, user]",{"range":"265","text":"266"},"Update the dependencies array to be: [dispatch, alert, isAuthenticated, error, history, redirect]",{"range":"267","text":"268"},[1315,1359],"[dispatch, alert, error, history, isUpdated, user]",[914,964],"[dispatch, alert, isAuthenticated, error, history, redirect]"]